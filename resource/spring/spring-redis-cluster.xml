<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- 连接池配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 最大连接数 -->
		<property name="maxTotal" value="${redis.maxTotal}" />
		<!-- 最大空闲连接数 -->
		<property name="maxIdle" value="${redis.maxIdle}" />
		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="${redis.minIdle}" />
		<!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
		<!-- 每次释放连接的最大数目 -->
		<property name="numTestsPerEvictionRun" value="100" />
		<!-- 释放连接的扫描间隔（毫秒） -->
		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		<!-- 连接最小空闲时间 -->
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
		<property name="softMinEvictableIdleTimeMillis" value="10000" />
		<!-- 在获取连接的时候检查有效性, 默认false -->
		<property name="testOnBorrow" value="true" />
		<!-- 在空闲时检查有效性, 默认false -->
		<property name="testWhileIdle" value="true" />
		<!-- 在归还给pool时，是否提前进行validate操作 -->
		<property name="testOnReturn" value="true" />
		<!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
		<property name="blockWhenExhausted" value="false" />
	</bean>

	<!-- 集群节点配置 -->
	<bean id="hostport1" class="redis.clients.jedis.HostAndPort">
		<constructor-arg name="host" value="${redis1.cluster.host}"></constructor-arg>
		<constructor-arg name="port" value="${redis1.cluster.port}"></constructor-arg>
	</bean>
	<bean id="hostport2" class="redis.clients.jedis.HostAndPort">
		<constructor-arg name="host" value="${redis2.cluster.host}"></constructor-arg>
		<constructor-arg name="port" value="${redis2.cluster.port}"></constructor-arg>
	</bean>
	<bean id="hostport3" class="redis.clients.jedis.HostAndPort">
		<constructor-arg name="host" value="${redis3.cluster.host}"></constructor-arg>
		<constructor-arg name="port" value="${redis3.cluster.port}"></constructor-arg>
	</bean>
	<bean id="hostport4" class="redis.clients.jedis.HostAndPort">
		<constructor-arg name="host" value="${redis4.cluster.host}"></constructor-arg>
		<constructor-arg name="port" value="${redis4.cluster.port}"></constructor-arg>
	</bean>
	<bean id="hostport5" class="redis.clients.jedis.HostAndPort">
		<constructor-arg name="host" value="${redis5.cluster.host}"></constructor-arg>
		<constructor-arg name="port" value="${redis5.cluster.port}"></constructor-arg>
	</bean>
	<bean id="hostport6" class="redis.clients.jedis.HostAndPort">
		<constructor-arg name="host" value="${redis6.cluster.host}"></constructor-arg>
		<constructor-arg name="port" value="${redis6.cluster.port}"></constructor-arg>
	</bean>

	<!-- 集群版的配置: 当采用密码认证时使用 -->
	<bean id="jedisCluster" class="redis.clients.jedis.JedisCluster">
		<constructor-arg name="jedisClusterNode">
			<set>
				<ref bean="hostport1" />
				<ref bean="hostport2" />
				<ref bean="hostport3" />
				<ref bean="hostport4" />
				<ref bean="hostport5" />
				<ref bean="hostport6" />
			</set>
		</constructor-arg>
		<constructor-arg name="connectionTimeout" value="${redis.connTimeout}" />
		<!-- socket超时时间 , 这个是我写的, 没地方参考, 还需要调整 -->
		<constructor-arg name="soTimeout" value="${redis.soTimeout}" />
		<constructor-arg name="maxAttempts" value="${redis.maxAttempts}" />
		<constructor-arg name="password" value="${redis.password}" />
		<constructor-arg name="poolConfig">
			<ref bean="jedisPoolConfig" />
		</constructor-arg>
	</bean>

	<bean id="redisMsgPubSubListener" class="nosql.redis.listener.RedisMsgPubSubListener"></bean>

	<bean id="redisClientCluster" class="nosql.redis.client.RedisClientCluster">
		<property name="jedisCluster" ref="jedisCluster" />
		<property name="redisMsgPubSubListener" ref="redisMsgPubSubListener" />
	</bean>

	<bean id="redisUtils" class="nosql.redis.RedisUtils" init-method="getInstance">
        <property name="clusterClient" ref="redisClientCluster"></property>
    </bean>
</beans>